<?xml version="1.0" encoding="utf-8" ?>
<helpItems xmlns="http://msh" schema="maml">
	<!--Edited with: SAPIEN PowerShell HelpWriter 2015 v1.0.11-->
	<!--Generated by: SAPIEN PowerShell HelpWriter 2015 v1.0.11-->
	<!--All Commands-->
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Add-WmiEventConsumer</command:name>
			<maml:description>
				<maml:para>Add-WmiEventConsumer -ConsumerFile &lt;string&gt; [-ComputerName &lt;string[]&gt;] [&lt;CommonParameters&gt;]

Add-WmiEventConsumer -Name &lt;string&gt; -Message &lt;string&gt; -SMTPServer &lt;string&gt; -ToLine &lt;string&gt; [-ComputerName &lt;string[]&gt;] [-BccLine &lt;string&gt;] [-CcLine &lt;string&gt;] [-FromLine &lt;string&gt;] [-HeaderFields &lt;string[]&gt;] [-ReplyToLine &lt;string&gt;] [-Subject &lt;string&gt;] [&lt;CommonParameters&gt;]

Add-WmiEventConsumer -Name &lt;string&gt; -EventID &lt;uint32&gt; -NameOfUserSidProperty &lt;string&gt; -NameOfRawDataProperty &lt;string&gt; -SourceName &lt;string&gt; [-ComputerName &lt;string[]&gt;] [-Category &lt;uint16&gt;] [-EventType &lt;uint32&gt;] [-InsertionStringTemplates &lt;string[]&gt;] [-UNCServerName &lt;string&gt;] [&lt;CommonParameters&gt;]

Add-WmiEventConsumer -Name &lt;string&gt; -Filename &lt;string&gt; -Text &lt;string&gt; [-ComputerName &lt;string[]&gt;] [-IsUnicode &lt;bool&gt;] [-MaximumFileSize &lt;uint64&gt;] [&lt;CommonParameters&gt;]

Add-WmiEventConsumer -Name &lt;string&gt; -CommandLineTemplate &lt;string&gt; -ExecutablePath &lt;string&gt; [-ComputerName &lt;string[]&gt;] [-KillTimeout &lt;uint32&gt;] [-CreateNewProcessGroup &lt;bool&gt;] [-CreateSeparateWowVdm &lt;bool&gt;] [-CreateSharedWowVdm &lt;bool&gt;] [-FillAttributes &lt;uint32&gt;] [-ForceOffFeedback &lt;bool&gt;] [-ForceOnFeedback &lt;bool&gt;] [-Priority &lt;int&gt;] [-RunInteractively &lt;bool&gt;] [-ShowWindowCommand &lt;uint32&gt;] [-UseDefaultErrorMode &lt;bool&gt;] [-WindowTitle &lt;string&gt;] [-WorkingDirectory &lt;string&gt;] [-XCoordinate &lt;uint32&gt;] [-XNumCharacters &lt;uint32&gt;] [-XSize &lt;uint32&gt;] [-YCoordinate &lt;uint32&gt;] [-YNumCharacters &lt;uint32&gt;] [-YSize &lt;uint32&gt;] [&lt;CommonParameters&gt;]

Add-WmiEventConsumer -Name &lt;string&gt; -ScriptText &lt;string&gt; [-ComputerName &lt;string[]&gt;] [-KillTimeout &lt;uint32&gt;] [-ScriptingEngine &lt;string&gt;] [&lt;CommonParameters&gt;]

Add-WmiEventConsumer -Name &lt;string&gt; -ScriptFileName &lt;string&gt; [-ComputerName &lt;string[]&gt;] [-KillTimeout &lt;uint32&gt;] [-ScriptingEngine &lt;string&gt;] [&lt;CommonParameters&gt;]</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Add</command:verb>
			<command:noun>WmiEventConsumer</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para/>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Add-WmiEventConsumer</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Adds an Event Consumer running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Add-WmiEventConsumer even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>ConsumerFile</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Add-WmiEventConsumer</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Adds an Event Consumer running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Add-WmiEventConsumer even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Name</maml:name>
					<maml:description>
						<maml:para>Unique identifier for the event consumer.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>BccLine</maml:name>
					<maml:description>
						<maml:para>A list of addresses, separated by a comma or semicolon, in the format of a standard string template to which the message is sent as a blind carbon copy.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>CcLine</maml:name>
					<maml:description>
						<maml:para>A list of addresses, separated by a comma or semicolon, in the format of a standard string template to which the message is sent as a carbon copy.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>FromLine</maml:name>
					<maml:description>
						<maml:para>From line of an email message in the format of a standard string template. If NULL, a From line is constructed in the form of WinMgmt@MachineName.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>HeaderFields</maml:name>
					<maml:description>
						<maml:para>Array of header fields that are inserted into an email message without interpretation.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Message</maml:name>
					<maml:description>
						<maml:para>Standard string template that contains the body of an email message.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ReplyToLine</maml:name>
					<maml:description>
						<maml:para>Reply-to line of an email message in the format of a standard string template. If NULL, no Reply-to line is used.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>SMTPServer</maml:name>
					<maml:description>
						<maml:para>Name of the SMTP server through which an email is sent. Permissible names are an IP address, or a DNS or NetBIOS name. This property cannot be NULL.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Subject</maml:name>
					<maml:description>
						<maml:para>Standard string template that contains the subject of an email message.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ToLine</maml:name>
					<maml:description>
						<maml:para>A list of addresses, separated by a comma or semicolon, in the format of a standard string template that identifies where the message is to be sent.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Add-WmiEventConsumer</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Adds an Event Consumer running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Add-WmiEventConsumer even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Name</maml:name>
					<maml:description>
						<maml:para>Unique identifier for the event consumer.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Category</maml:name>
					<maml:description>
						<maml:para>Event category. This is source-specific information and can have any value.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">UInt16</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>EventID</maml:name>
					<maml:description>
						<maml:para>Event message in the message DLL. This property cannot be NULL.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">UInt32</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>EventType</maml:name>
					<maml:description>
						<maml:para>Type of event.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>InsertionStringTemplates</maml:name>
					<maml:description>
						<maml:para>Array of standard string templates that is used as the insertion string for an event log record.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>NameOfUserSidProperty</maml:name>
					<maml:description>
						<maml:para>Name of the event property that contains a security identifier (SID) to be passed to the ReportEvent function lpUserSid parameter. The property must be either an array of bytes (uint8) or a string. If it is an array of bytes, it is assumed to be a SID. If it is a string, it is a string SID that is converted into a SID.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>NameOfRawDataProperty</maml:name>
					<maml:description>
						<maml:para>Name of the event property that contains data to be passed to the ReportEvent function lpRawData parameter.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>SourceName</maml:name>
					<maml:description>
						<maml:para>Source name where a message is located. The customer is assumed to have registered a DLL with the necessary messages.

Note: The value of this parameter must not include a colon (:) character.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>UNCServerName</maml:name>
					<maml:description>
						<maml:para>Name of the computer on which to log an event, or NULL if the event is to be logged on a local server.

Windows Server 2003 with SP1 and Windows Vista:  Authenticated users cannot, by default, log events to the Application log on a remote computer. As a result, using this property to specify a remote computer will not work.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Add-WmiEventConsumer</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Adds an Event Consumer running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Add-WmiEventConsumer even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Name</maml:name>
					<maml:description>
						<maml:para>Unique identifier for the event consumer.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Filename</maml:name>
					<maml:description>
						<maml:para>Name of a file that includes the path to which the log entries are appended. If the file does not exist, LogFileEventConsumer attempts to create it. 

The consumer fails when the path does not exist, or when the user who creates the consumer does not have write permissions for the file or path.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>IsUnicode</maml:name>
					<maml:description>
						<maml:para>If TRUE, the log file is a Unicode text file. If FALSE, the log file is a multibyte code text file. If the file exists, this property is ignored and the current file setting is used. For example, if IsUnicode is FALSE, but the existing file is a Unicode file, then Unicode is used. If IsUnicode is TRUE, but the file is multibyte code, then multibyte code is used.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>MaximumFileSize</maml:name>
					<maml:description>
						<maml:para>Maximum size of a log file—in bytes. If the primary file exceeds its maximum size, the contents are moved to a different file and the primary file is emptied. A value of 0 (zero) means there is no size limit. 

The default value is 65,535 bytes. The size of the file is checked before a write operation. Therefore, you can have a file that is slightly larger than the specified size limit. The next write operation catches it and starts a new file.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">UInt64</command:parameterValue>
					<dev:defaultValue>65,535</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Text</maml:name>
					<maml:description>
						<maml:para>Standard string template for the text of a log entry.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Add-WmiEventConsumer</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Adds an Event Consumer running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Add-WmiEventConsumer even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Name</maml:name>
					<maml:description>
						<maml:para>Unique identifier for the event consumer.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>KillTimeout</maml:name>
					<maml:description>
						<maml:para>Number, in seconds, that the script is allowed to run. If 0 (zero), which is the default, the script is not terminated.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>CommandLineTemplate</maml:name>
					<maml:description>
						<maml:para>Standard string template that specifies the process to be started. This property can be NULL, and the ExecutablePath property is used as the command line.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>CreateNewProcessGroup</maml:name>
					<maml:description>
						<maml:para>If True, the new process is the root process of a new process group. The process group includes all processes that are descendants of this root process. 

The process identifier of the new process group is the same as this process identifier. Process groups are used by the GenerateConsoleCtrlEvent method to enable sending a CTRL+C or CTRL+BREAK signal to a group of console processes.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>CreateSeparateWowVdm</maml:name>
					<maml:description>
						<maml:para>If True, the new process runs in a private Virtual DOS Machine (VDM). This is only valid when starting an application running on a 16-bit Windows operating system. 

If set to False, all applications running on a 16-bit Windows operating system run as threads in a single, shared VDM. For more information, see the Remarks section of this topic.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>CreateSharedWowVdm</maml:name>
					<maml:description>
						<maml:para>If True, the CreateProcess method runs the new process in the shared Virtual DOS Machine (VDM). This property can override the DefaultSeparateVDM switch in the Windows section of Win.ini if set to True.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ExecutablePath</maml:name>
					<maml:description>
						<maml:para>Module to execute. The string can specify the full path and file name of the module to execute, or it can specify a partial name. If a partial name is specified, the current drive and current directory are assumed.

The ExecutablePath property can be NULL. In that case, the module name must be the first white space-delimited token in the CommandLineTemplate property value. If using a long file name that contains a space, use quoted strings to indicate where the file name ends and the arguments begin—to clarify the file name.

Note: Because the CommandLineTemplate property can be a template where the module to execute is supplied by a variable, a NULL ExecutablePath property permits the module that is specified in the parameter to execute, and then it is out of your control. Always set the ExecutablePath property in the CommandLineEventConsumer registration to include the required executable, which avoids overwriting by events parameters. If you must use a template and variable to specify the module to execute, be careful about who is granted full write privilege in the namespace.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>FillAttributes</maml:name>
					<maml:description>
						<maml:para>Specifies the initial text and background colors if a new console window is created in a console application</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ForceOffFeedback</maml:name>
					<maml:description>
						<maml:para>If True, the feedback cursor is forced off while the process is starting. The normal cursor is displayed.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ForceOnFeedback</maml:name>
					<maml:description>
						<maml:para>If True, the cursor is in feedback mode for two seconds after CreateProcess is called. During those two seconds, if the process makes the first GUI call, the system gives five more seconds to the process. During those five seconds, if the process shows a window, the system gives another five seconds to the process to finish drawing the window.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Priority</maml:name>
					<maml:description>
						<maml:para>Scheduling priority level of the process threads.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>RunInteractively</maml:name>
					<maml:description>
						<maml:para>If True, the process is launched in the interactive WinStation. If False, the process is launched in the default service WinStation. This property overrides the DesktopName property. This property is only used locally, and only if the interactive user is the same user who set up the consumer.

Starting with Windows Vista, the process running the CommandLineEventConsumer instance is started under the LocalSystem account and is in session 0. Services which run in session 0 cannot interact with user sessions.

Windows Server 2003: If the user logon is through a terminal services connection, the CommandLineEventConsumer process does not run interactively.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ShowWindowCommand</maml:name>
					<maml:description>
						<maml:para>Window show state.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>UseDefaultErrorMode</maml:name>
					<maml:description>
						<maml:para>If True, the default error mode is used.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>WindowTitle</maml:name>
					<maml:description>
						<maml:para>Title that appears on the title bar of the process. This property is ignored for GUI applications.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>WorkingDirectory</maml:name>
					<maml:description>
						<maml:para>Working directory for this process.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>XCoordinate</maml:name>
					<maml:description>
						<maml:para>X-offset, in pixels, from the left edge of the screen to the left edge of the window, if a new window is created.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>XNumCharacters</maml:name>
					<maml:description>
						<maml:para>Screen buffer width, in character columns, if a new console window is created. This property is ignored in a GUI process.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>XSize</maml:name>
					<maml:description>
						<maml:para>Width, in pixels, of a new window, if a new window is created.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>YCoordinate</maml:name>
					<maml:description>
						<maml:para>Y-offset, in pixels, from the top edge of the screen to the top edge of the window, if a new window is created.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>YNumCharacters</maml:name>
					<maml:description>
						<maml:para>Screen buffer height, in character rows, if a new console window is created. This property is ignored in a GUI process.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>YSize</maml:name>
					<maml:description>
						<maml:para>Height, in pixels, of the new window, if a new window is created.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Add-WmiEventConsumer</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Adds an Event Consumer running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Add-WmiEventConsumer even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Name</maml:name>
					<maml:description>
						<maml:para>Unique identifier for the event consumer.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>KillTimeout</maml:name>
					<maml:description>
						<maml:para>Number, in seconds, that the script is allowed to run. If 0 (zero), which is the default, the script is not terminated.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ScriptingEngine</maml:name>
					<maml:description>
						<maml:para>Name of the scripting engine to use, for example, &quot;VBScript&quot;. This property cannot be NULL.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>VBScript</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ScriptText</maml:name>
					<maml:description>
						<maml:para>Text of the script that is expressed in a language known to the scripting engine. This property must be NULL if the ScriptFileName property is not NULL.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Add-WmiEventConsumer</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Adds an Event Consumer running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Add-WmiEventConsumer even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Name</maml:name>
					<maml:description>
						<maml:para>Unique identifier for the event consumer.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>KillTimeout</maml:name>
					<maml:description>
						<maml:para>Number, in seconds, that the script is allowed to run. If 0 (zero), which is the default, the script is not terminated.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ScriptingEngine</maml:name>
					<maml:description>
						<maml:para>Name of the scripting engine to use, for example, &quot;VBScript&quot;. This property cannot be NULL.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>VBScript</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ScriptFileName</maml:name>
					<maml:description>
						<maml:para>Name of the file from which the script text is read, intended as an alternative to specifying the text of the script in the ScriptText property. This property must be NULL if the ScriptText property is not NULL.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>Adds an Event Consumer running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Add-WmiEventConsumer even if your computer is not configured to run remote commands.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConsumerFile</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Unique identifier for the event consumer.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>BccLine</maml:name>
				<maml:description>
					<maml:para>A list of addresses, separated by a comma or semicolon, in the format of a standard string template to which the message is sent as a blind carbon copy.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>CcLine</maml:name>
				<maml:description>
					<maml:para>A list of addresses, separated by a comma or semicolon, in the format of a standard string template to which the message is sent as a carbon copy.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>FromLine</maml:name>
				<maml:description>
					<maml:para>From line of an email message in the format of a standard string template. If NULL, a From line is constructed in the form of WinMgmt@MachineName.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>HeaderFields</maml:name>
				<maml:description>
					<maml:para>Array of header fields that are inserted into an email message without interpretation.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Message</maml:name>
				<maml:description>
					<maml:para>Standard string template that contains the body of an email message.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>ReplyToLine</maml:name>
				<maml:description>
					<maml:para>Reply-to line of an email message in the format of a standard string template. If NULL, no Reply-to line is used.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>SMTPServer</maml:name>
				<maml:description>
					<maml:para>Name of the SMTP server through which an email is sent. Permissible names are an IP address, or a DNS or NetBIOS name. This property cannot be NULL.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Subject</maml:name>
				<maml:description>
					<maml:para>Standard string template that contains the subject of an email message.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>ToLine</maml:name>
				<maml:description>
					<maml:para>A list of addresses, separated by a comma or semicolon, in the format of a standard string template that identifies where the message is to be sent.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Category</maml:name>
				<maml:description>
					<maml:para>Event category. This is source-specific information and can have any value.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">UInt16</command:parameterValue>
				<dev:type>
					<maml:name>UInt16</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>EventID</maml:name>
				<maml:description>
					<maml:para>Event message in the message DLL. This property cannot be NULL.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">UInt32</command:parameterValue>
				<dev:type>
					<maml:name>UInt32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>EventType</maml:name>
				<maml:description>
					<maml:para>Type of event.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
				<dev:type>
					<maml:name>UInt32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>InsertionStringTemplates</maml:name>
				<maml:description>
					<maml:para>Array of standard string templates that is used as the insertion string for an event log record.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>NameOfUserSidProperty</maml:name>
				<maml:description>
					<maml:para>Name of the event property that contains a security identifier (SID) to be passed to the ReportEvent function lpUserSid parameter. The property must be either an array of bytes (uint8) or a string. If it is an array of bytes, it is assumed to be a SID. If it is a string, it is a string SID that is converted into a SID.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>NameOfRawDataProperty</maml:name>
				<maml:description>
					<maml:para>Name of the event property that contains data to be passed to the ReportEvent function lpRawData parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>SourceName</maml:name>
				<maml:description>
					<maml:para>Source name where a message is located. The customer is assumed to have registered a DLL with the necessary messages.

Note: The value of this parameter must not include a colon (:) character.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>UNCServerName</maml:name>
				<maml:description>
					<maml:para>Name of the computer on which to log an event, or NULL if the event is to be logged on a local server.

Windows Server 2003 with SP1 and Windows Vista:  Authenticated users cannot, by default, log events to the Application log on a remote computer. As a result, using this property to specify a remote computer will not work.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Filename</maml:name>
				<maml:description>
					<maml:para>Name of a file that includes the path to which the log entries are appended. If the file does not exist, LogFileEventConsumer attempts to create it. 

The consumer fails when the path does not exist, or when the user who creates the consumer does not have write permissions for the file or path.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>IsUnicode</maml:name>
				<maml:description>
					<maml:para>If TRUE, the log file is a Unicode text file. If FALSE, the log file is a multibyte code text file. If the file exists, this property is ignored and the current file setting is used. For example, if IsUnicode is FALSE, but the existing file is a Unicode file, then Unicode is used. If IsUnicode is TRUE, but the file is multibyte code, then multibyte code is used.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
				<dev:type>
					<maml:name>Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>MaximumFileSize</maml:name>
				<maml:description>
					<maml:para>Maximum size of a log file—in bytes. If the primary file exceeds its maximum size, the contents are moved to a different file and the primary file is emptied. A value of 0 (zero) means there is no size limit. 

The default value is 65,535 bytes. The size of the file is checked before a write operation. Therefore, you can have a file that is slightly larger than the specified size limit. The next write operation catches it and starts a new file.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">UInt64</command:parameterValue>
				<dev:type>
					<maml:name>UInt64</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>65,535</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Text</maml:name>
				<maml:description>
					<maml:para>Standard string template for the text of a log entry.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>KillTimeout</maml:name>
				<maml:description>
					<maml:para>Number, in seconds, that the script is allowed to run. If 0 (zero), which is the default, the script is not terminated.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
				<dev:type>
					<maml:name>UInt32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>CommandLineTemplate</maml:name>
				<maml:description>
					<maml:para>Standard string template that specifies the process to be started. This property can be NULL, and the ExecutablePath property is used as the command line.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>CreateNewProcessGroup</maml:name>
				<maml:description>
					<maml:para>If True, the new process is the root process of a new process group. The process group includes all processes that are descendants of this root process. 

The process identifier of the new process group is the same as this process identifier. Process groups are used by the GenerateConsoleCtrlEvent method to enable sending a CTRL+C or CTRL+BREAK signal to a group of console processes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
				<dev:type>
					<maml:name>Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>CreateSeparateWowVdm</maml:name>
				<maml:description>
					<maml:para>If True, the new process runs in a private Virtual DOS Machine (VDM). This is only valid when starting an application running on a 16-bit Windows operating system. 

If set to False, all applications running on a 16-bit Windows operating system run as threads in a single, shared VDM. For more information, see the Remarks section of this topic.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
				<dev:type>
					<maml:name>Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>CreateSharedWowVdm</maml:name>
				<maml:description>
					<maml:para>If True, the CreateProcess method runs the new process in the shared Virtual DOS Machine (VDM). This property can override the DefaultSeparateVDM switch in the Windows section of Win.ini if set to True.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
				<dev:type>
					<maml:name>Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>ExecutablePath</maml:name>
				<maml:description>
					<maml:para>Module to execute. The string can specify the full path and file name of the module to execute, or it can specify a partial name. If a partial name is specified, the current drive and current directory are assumed.

The ExecutablePath property can be NULL. In that case, the module name must be the first white space-delimited token in the CommandLineTemplate property value. If using a long file name that contains a space, use quoted strings to indicate where the file name ends and the arguments begin—to clarify the file name.

Note: Because the CommandLineTemplate property can be a template where the module to execute is supplied by a variable, a NULL ExecutablePath property permits the module that is specified in the parameter to execute, and then it is out of your control. Always set the ExecutablePath property in the CommandLineEventConsumer registration to include the required executable, which avoids overwriting by events parameters. If you must use a template and variable to specify the module to execute, be careful about who is granted full write privilege in the namespace.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>FillAttributes</maml:name>
				<maml:description>
					<maml:para>Specifies the initial text and background colors if a new console window is created in a console application</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
				<dev:type>
					<maml:name>UInt32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>ForceOffFeedback</maml:name>
				<maml:description>
					<maml:para>If True, the feedback cursor is forced off while the process is starting. The normal cursor is displayed.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
				<dev:type>
					<maml:name>Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>ForceOnFeedback</maml:name>
				<maml:description>
					<maml:para>If True, the cursor is in feedback mode for two seconds after CreateProcess is called. During those two seconds, if the process makes the first GUI call, the system gives five more seconds to the process. During those five seconds, if the process shows a window, the system gives another five seconds to the process to finish drawing the window.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
				<dev:type>
					<maml:name>Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Priority</maml:name>
				<maml:description>
					<maml:para>Scheduling priority level of the process threads.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>RunInteractively</maml:name>
				<maml:description>
					<maml:para>If True, the process is launched in the interactive WinStation. If False, the process is launched in the default service WinStation. This property overrides the DesktopName property. This property is only used locally, and only if the interactive user is the same user who set up the consumer.

Starting with Windows Vista, the process running the CommandLineEventConsumer instance is started under the LocalSystem account and is in session 0. Services which run in session 0 cannot interact with user sessions.

Windows Server 2003: If the user logon is through a terminal services connection, the CommandLineEventConsumer process does not run interactively.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
				<dev:type>
					<maml:name>Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>ShowWindowCommand</maml:name>
				<maml:description>
					<maml:para>Window show state.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
				<dev:type>
					<maml:name>UInt32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>UseDefaultErrorMode</maml:name>
				<maml:description>
					<maml:para>If True, the default error mode is used.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
				<dev:type>
					<maml:name>Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>WindowTitle</maml:name>
				<maml:description>
					<maml:para>Title that appears on the title bar of the process. This property is ignored for GUI applications.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>WorkingDirectory</maml:name>
				<maml:description>
					<maml:para>Working directory for this process.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>XCoordinate</maml:name>
				<maml:description>
					<maml:para>X-offset, in pixels, from the left edge of the screen to the left edge of the window, if a new window is created.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
				<dev:type>
					<maml:name>UInt32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>XNumCharacters</maml:name>
				<maml:description>
					<maml:para>Screen buffer width, in character columns, if a new console window is created. This property is ignored in a GUI process.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
				<dev:type>
					<maml:name>UInt32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>XSize</maml:name>
				<maml:description>
					<maml:para>Width, in pixels, of a new window, if a new window is created.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
				<dev:type>
					<maml:name>UInt32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>YCoordinate</maml:name>
				<maml:description>
					<maml:para>Y-offset, in pixels, from the top edge of the screen to the top edge of the window, if a new window is created.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
				<dev:type>
					<maml:name>UInt32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>YNumCharacters</maml:name>
				<maml:description>
					<maml:para>Screen buffer height, in character rows, if a new console window is created. This property is ignored in a GUI process.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
				<dev:type>
					<maml:name>UInt32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>YSize</maml:name>
				<maml:description>
					<maml:para>Height, in pixels, of the new window, if a new window is created.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">UInt32</command:parameterValue>
				<dev:type>
					<maml:name>UInt32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>ScriptingEngine</maml:name>
				<maml:description>
					<maml:para>Name of the scripting engine to use, for example, &quot;VBScript&quot;. This property cannot be NULL.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>VBScript</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>ScriptText</maml:name>
				<maml:description>
					<maml:para>Text of the script that is expressed in a language known to the scripting engine. This property must be NULL if the ScriptFileName property is not NULL.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>ScriptFileName</maml:name>
				<maml:description>
					<maml:para>Name of the file from which the script text is read, intended as an alternative to specifying the text of the script in the ScriptText property. This property must be NULL if the ScriptText property is not NULL.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Add-WmiEventConsumer -ComputerName WORKSTATION1 -ConsumerFile AS_ExtrinsicHTTPPOST</dev:code>
				<dev:remarks>
					<maml:para>
					</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Add-WmiEventConsumer -ComputerName SERVER1 -Name LogTest -Filename C:\temp\output.txt -Text &quot;%TargetInstance%&quot;


Path          : \\SERVER1\root\subscription:LogFileEventConsumer.Name=&quot;LogTest&quot;
RelativePath  : LogFileEventConsumer.Name=&quot;LogTest&quot;
Server        : localhost
NamespacePath : root\subscription
ClassName     : LogFileEventConsumer
IsClass       : False
IsInstance    : True
IsSingleton   : False</dev:code>
				<dev:remarks>
					<maml:para>Add a LogFile Event Consumer named LogTest on SERVER1 that outputs to C:\temp\output.txt</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Add-WMIEventConsumer -Name commandlineexe -ExecutablePath calc.exe


Path          : \\localhost\root\subscription:CommandLineEventConsumer.Name=&quot;commandlineexe
RelativePath  : CommandLineEventConsumer.Name=&quot;commandlineexe&quot;
Server        : localhost
NamespacePath : root\subscription
ClassName     : CommandLineEventConsumer
IsClass       : False
IsInstance    : True
IsSingleton   : False</dev:code>
				<dev:remarks>
					<maml:para>Adds a CommandLineEventConsumer that starts a calc.exe process in the background</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Add-WmiEventFilter</command:name>
			<maml:description>
				<maml:para>Add-WmiEventFilter -Name &lt;string&gt; -Query &lt;string&gt; [-ComputerName &lt;string[]&gt;] [-EventNamespace &lt;string&gt;] [-QueryLanguage &lt;string&gt;] [&lt;CommonParameters&gt;]

Add-WmiEventFilter -FilterFile &lt;string&gt; [-ComputerName &lt;string[]&gt;] [&lt;CommonParameters&gt;]</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Add</command:verb>
			<command:noun>WmiEventFilter</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para/>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Add-WmiEventFilter</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Adds an Event Filter running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Add-WmiEventFilter even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>localhost</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Name</maml:name>
					<maml:description>
						<maml:para>Unique identifier of an event filter.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>EventNamespace</maml:name>
					<maml:description>
						<maml:para>Namespace of the event instance used for cross-namespace subscriptions.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>root\cimv2</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Query</maml:name>
					<maml:description>
						<maml:para>Windows Management Instrumentation Query Language (WQL) event query that specifies the set of events for consumer notification, and the specific conditions for notification.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>QueryLanguage</maml:name>
					<maml:description>
						<maml:para>Language used for the query. Because WMI currently supports only WMI Query Language (WQL) as a query language, this property must be set to &quot;WQL&quot;.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>WQL</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Add-WmiEventFilter</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Adds an Event Filter running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Add-WmiEventFilter even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>localhost</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>FilterFile</maml:name>
					<maml:description>
						<maml:para>The name of a filter definition file (contained within $ModulePath\Filters) without the file extension.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>Adds an Event Filter running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Add-WmiEventFilter even if your computer is not configured to run remote commands.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>localhost</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Unique identifier of an event filter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>EventNamespace</maml:name>
				<maml:description>
					<maml:para>Namespace of the event instance used for cross-namespace subscriptions.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>root\cimv2</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Query</maml:name>
				<maml:description>
					<maml:para>Windows Management Instrumentation Query Language (WQL) event query that specifies the set of events for consumer notification, and the specific conditions for notification.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>QueryLanguage</maml:name>
				<maml:description>
					<maml:para>Language used for the query. Because WMI currently supports only WMI Query Language (WQL) as a query language, this property must be set to &quot;WQL&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>WQL</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>FilterFile</maml:name>
				<maml:description>
					<maml:para>The name of a filter definition file (contained within $ModulePath\Filters) without the file extension.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Add-WmiEventFilter -FilterFile ProcessStartTrace


Path          : \\localhost\root\subscription:__EventFilter.Name=&quot;ProcessStartTrace&quot;
RelativePath  : __EventFilter.Name=&quot;ProcessStartTrace&quot;
Server        : localhost
NamespacePath : root\subscription
ClassName     : __EventFilter
IsClass       : False
IsInstance    : True
IsSingleton   : False</dev:code>
				<dev:remarks>
					<maml:para>
					</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Add-WMIEventFilter -Name Test -EventNamespace root\subscription -Query &apos;SELECT * FROM __InstanceCreationEvent WITHIN 10 WHERE TargetInstance ISA __EventFilter&apos; -QueryLanguage WQL


Path          : \\localhost\root\subscription:__EventFilter.Name=&quot;Test&quot;
RelativePath  : __EventFilter.Name=&quot;Test&quot;
Server        : localhost
NamespacePath : root\subscription
ClassName     : __EventFilter
IsClass       : False
IsInstance    : True
IsSingleton   : False</dev:code>
				<dev:remarks>
					<maml:para>
					</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Add-WmiEventSubscription</command:name>
			<maml:description>
				<maml:para>Add-WmiEventSubscription -FilterName &lt;string&gt; -ConsumerName &lt;string&gt; [-ComputerName &lt;string[]&gt;] [&lt;CommonParameters&gt;]

Add-WmiEventSubscription -FilterPath &lt;string&gt; -ConsumerPath &lt;string&gt; [-ComputerName &lt;string[]&gt;] [&lt;CommonParameters&gt;]</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Add</command:verb>
			<command:noun>WmiEventSubscription</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para/>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Add-WmiEventSubscription</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Adds an Event Subscription running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Add-WmiEventSubscription even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>FilterName</maml:name>
					<maml:description>
						<maml:para>Name of the Filter to use for subscription.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ConsumerName</maml:name>
					<maml:description>
						<maml:para>Name of the Consumer to use for subscription.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>Adds an Event Subscription running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Add-WmiEventSubscription even if your computer is not configured to run remote commands.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>FilterName</maml:name>
				<maml:description>
					<maml:para>Name of the Filter to use for subscription.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>ConsumerName</maml:name>
				<maml:description>
					<maml:para>Name of the Consumer to use for subscription.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>PS C:\&gt; Add-WmiEventSubscription -FilterName ProcessStartTrace -ConsumerName AS_ExtrinsicHTTPPOST


Path          : \\localhost\root\subscription:__FilterToConsumerBinding.Consumer=&quot;\\\\WIN-OL5AKAF1OUJ\\ROOT\\subscripti
                on:ActiveScriptEventConsumer.Name=\&quot;AS_ExtrinsicHTTPPOST\&quot;&quot;,Filter=&quot;\\\\WIN-OL5AKAF1OUJ\\ROOT\\subscrip
                tion:__EventFilter.Name=\&quot;ProcessStartTrace\&quot;&quot;
RelativePath  : __FilterToConsumerBinding.Consumer=&quot;\\\\WIN-OL5AKAF1OUJ\\ROOT\\subscription:ActiveScriptEventConsumer.N
                ame=\&quot;AS_ExtrinsicHTTPPOST\&quot;&quot;,Filter=&quot;\\\\WIN-OL5AKAF1OUJ\\ROOT\\subscription:__EventFilter.Name=\&quot;Proc
                essStartTrace\&quot;&quot;
Server        : localhost
NamespacePath : root\subscription
ClassName     : __FilterToConsumerBinding
IsClass       : False
IsInstance    : True
IsSingleton   : False
				</dev:code>
				<dev:remarks>
					<maml:para>Adds an Event Subscription binding the ProcessStartTrace filter with the AS_ExtrinsicHTTPPOST consumer.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-WmiEventConsumer</command:name>
			<maml:description>
				<maml:para>Get-WmiEventConsumer [-ComputerName &lt;string[]&gt;] [&lt;CommonParameters&gt;]

Get-WmiEventConsumer -Name &lt;string&gt; [-ComputerName &lt;string[]&gt;] [&lt;CommonParameters&gt;]</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>WmiEventConsumer</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para/>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-WmiEventConsumer</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Gets the Event Consumers running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Get-WmiEventConsumer even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-WmiEventConsumer</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Gets the Event Consumers running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Get-WmiEventConsumer even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Name</maml:name>
					<maml:description>
						<maml:para>Unique identifier for the event consumer to Get.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>Gets the Event Consumers running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Get-WmiEventConsumer even if your computer is not configured to run remote commands.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Unique identifier for the event consumer to Get.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-WmiEventConsumer


ComputerName    : WIN-OL5AKAF1OUJ
Name            : AS_GenericHTTPPOST
ScriptingEngine : VBScript
ScriptFileName  :
ScriptText      : Set objHTTP = CreateObject(&quot;Microsoft.XMLHTTP&quot;)
                  objHTTP.open &quot;POST&quot;, &quot;http://10.20.3.139/&quot;, False

                  objHTTP.setRequestHeader &quot;User-Agent&quot;, &quot;DoYouEven-TF12-Bro?&quot;

                  Dim outputString

                  outputString = outputString &amp; &quot;{&apos;TargetEvent&apos;: {&quot; &amp; vbCrLf
                  outputString = outputString &amp; vbTab &amp; &quot;&apos;EventType&apos;: &apos;&quot; &amp; TargetEvent.Path_.Class &amp; &quot;&apos;,&quot; &amp; vbCrLf
                  outputString = outputString &amp; vbTab &amp; &quot;&apos;TimeCreated&apos;: &apos;&quot; &amp; TargetEvent.Time_Created &amp; &quot;&apos;,&quot; &amp; vbCrLf
                  outputString = outputString &amp; vbTab &amp; &quot;&apos;Server&apos;: &apos;&quot; &amp; TargetEvent.Path_.Server &amp; &quot;&apos;,&quot; &amp; vbCrLf
                  outputString = outputString &amp; vbTab &amp; &quot;&apos;InstanceType&apos;: &apos;&quot; &amp; TargetEvent.TargetInstance.Path_.Class &amp;
                  &quot;&apos;,&quot; &amp; vbCrLf
                  outputString = outputString &amp; vbTab &amp; &quot;&apos;TargetInstance&apos;: {&quot; &amp; vbCrLf

                  For Each oProp in TargetEvent.TargetInstance.Properties_
                       outputString = outputString &amp; vbTab &amp; vbTab &amp; &quot;&apos;&quot; &amp; oProp.Name &amp; &quot;&apos;: &apos;&quot; &amp; oProp &amp; &quot;&apos;,&quot; &amp; vbCrLf
                  Next

                  outputString = outputString &amp; vbTab &amp; &quot;}&quot; &amp; vbCrLf
                  outputString = outputString &amp; &quot;}}&quot;

                  objHTTP.send outputString

                  Set objHTTP = Nothing

ComputerName    : WIN-OL5AKAF1OUJ
Name            : AS_ExtrinsicHTTPPOST
ScriptingEngine : VBScript
ScriptFileName  :
ScriptText      : Set objSysInfo = CreateObject(&quot;WinNTSystemInfo&quot;)
                  Set objHTTP = CreateObject(&quot;Microsoft.XMLHTTP&quot;)

                  objHTTP.open &quot;POST&quot;, &quot;http://127.0.0.1/&quot;, False

                  objHTTP.setRequestHeader &quot;User-Agent&quot;, &quot;DoYouEven-TF12-Bro?&quot;

                  Dim outputString

                  outputString = outputString &amp; &quot;{&quot;&quot;TargetEvent&quot;&quot;:{&quot;
                  outputString = outputString &amp; &quot;&quot;&quot;EventType&quot;&quot;:&quot;&quot;ExtrinsicEvent&quot;&quot;,&quot;
                  outputString = outputString &amp; &quot;&quot;&quot;TimeCreated&quot;&quot;:&quot;&quot;&quot; &amp; TargetEvent.Time_Created &amp; &quot;&quot;&quot;,&quot;
                  outputString = outputString &amp; &quot;&quot;&quot;Server&quot;&quot;:&quot;&quot;&quot; &amp; objSysInfo.ComputerName &amp; &quot;&quot;&quot;,&quot;
                  outputString = outputString &amp; &quot;&quot;&quot;InstanceType&quot;&quot;:&quot;&quot;&quot; &amp; TargetEvent.Path_.Class &amp; &quot;&quot;&quot;,&quot;
                  outputString = outputString &amp; &quot;&quot;&quot;TargetInstance&quot;&quot;:{&quot;

                  For Each oProp in TargetEvent.Properties_
                       If oProp.Name &lt;&gt; &quot;Sid&quot; Then
                          outputString = outputString &amp; &quot;&quot;&quot;&quot; &amp; oProp.Name &amp; &quot;&quot;&quot;:&quot; &amp; &quot;&quot;&quot;&quot; &amp; oProp &amp; &quot;&quot;&quot;,&quot;
                      End If
                  Next

                  outputString = Left(outputString, Len(outputString) - 1)
                  outputString = outputString &amp; &quot;}&quot;
                  outputString = outputString &amp; &quot;}}&quot;

                  objHTTP.send outputString

                  Set objHTTP = Nothing</dev:code>
				<dev:remarks>
					<maml:para>Gets all Event Consumers on localhost</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-WmiEventConsumer -ComputerName SERVER1


ComputerName    : SERVER1
Name            : AS_Test
ScriptingEngine : VBScript
ScriptFileName  :
ScriptText      : Set objHTTP = CreateObject(&quot;Microsoft.XMLHTTP&quot;)
                  objHTTP.open &quot;POST&quot;, &quot;http://127.0.0.1/&quot;, False

                  objHTTP.setRequestHeader &quot;User-Agent&quot;, &quot;DoYouEven-TF12-Bro?&quot;

                  Dim outputString

                  outputString = outputString &amp; &quot;{&quot;&quot;TargetEvent&quot;&quot;:{&quot;
                  outputString = outputString &amp; &quot;&quot;&quot;EventType&quot;&quot;:&quot;&quot;&quot; &amp; TargetEvent.Path_.Class &amp; &quot;&quot;&quot;,&quot;
                  outputString = outputString &amp; &quot;&quot;&quot;TimeCreated&quot;&quot;:&quot;&quot;&quot; &amp; TargetEvent.Time_Created &amp; &quot;&quot;&quot;,&quot;
                  outputString = outputString &amp; &quot;&quot;&quot;Server&quot;&quot;:&quot;&quot;&quot; &amp; TargetEvent.Path_.Server &amp; &quot;&quot;&quot;,&quot;
                  outputString = outputString &amp; &quot;&quot;&quot;InstanceType&quot;&quot;:&quot;&quot;&quot; &amp; TargetEvent.TargetInstance.Path_.Class &amp; &quot;&quot;&quot;,&quot;
                  outputString = outputString &amp; &quot;&quot;&quot;TargetInstance&quot;&quot;: {&quot;

                  For Each oProp in TargetEvent.TargetInstance.Properties_
                       outputString = outputString &amp; &quot;&quot;&quot;&quot; &amp; oProp.Name &amp; &quot;&quot;&quot;:&quot;&quot;&quot; &amp; oProp &amp; &quot;&quot;&quot;,&quot;
                  Next

                  outputString = Left(outputString, Len(outputString) - 3)
                  outputString = outputString &amp; &quot;}&quot;
                  outputString = outputString &amp; &quot;}}&quot;

                  outputString = Replace(outputString, &quot;\&quot;, &quot;\\&quot;)

                  objHTTP.send outputString

                  Set objHTTP = Nothing

ComputerName    : SERVER1
Name            : AS_ExtrinsicHTTPPOST
ScriptingEngine : VBScript
ScriptFileName  :
ScriptText      : Set objSysInfo = CreateObject(&quot;WinNTSystemInfo&quot;)
                  Set objHTTP = CreateObject(&quot;Microsoft.XMLHTTP&quot;)

                  objHTTP.open &quot;POST&quot;, &quot;http://127.0.0.1/&quot;, False

                  objHTTP.setRequestHeader &quot;User-Agent&quot;, &quot;DoYouEven-TF12-Bro?&quot;

                  Dim outputString

                  outputString = outputString &amp; &quot;{&quot;&quot;TargetEvent&quot;&quot;:{&quot;
                  outputString = outputString &amp; &quot;&quot;&quot;EventType&quot;&quot;:&quot;&quot;ExtrinsicEvent&quot;&quot;,&quot;
                  outputString = outputString &amp; &quot;&quot;&quot;TimeCreated&quot;&quot;:&quot;&quot;&quot; &amp; TargetEvent.Time_Created &amp; &quot;&quot;&quot;,&quot;
                  outputString = outputString &amp; &quot;&quot;&quot;Server&quot;&quot;:&quot;&quot;&quot; &amp; objSysInfo.ComputerName &amp; &quot;&quot;&quot;,&quot;
                  outputString = outputString &amp; &quot;&quot;&quot;InstanceType&quot;&quot;:&quot;&quot;&quot; &amp; TargetEvent.Path_.Class &amp; &quot;&quot;&quot;,&quot;
                  outputString = outputString &amp; &quot;&quot;&quot;TargetInstance&quot;&quot;:{&quot;

                  For Each oProp in TargetEvent.Properties_
                       If oProp.Name &lt;&gt; &quot;Sid&quot; Then
                          outputString = outputString &amp; &quot;&quot;&quot;&quot; &amp; oProp.Name &amp; &quot;&quot;&quot;:&quot; &amp; &quot;&quot;&quot;&quot; &amp; oProp &amp; &quot;&quot;&quot;,&quot;
                      End If
                  Next

                  outputString = Left(outputString, Len(outputString) - 1)
                  outputString = outputString &amp; &quot;}&quot;
                  outputString = outputString &amp; &quot;}}&quot;

                  objHTTP.send outputString

                  Set objHTTP = Nothing</dev:code>
				<dev:remarks>
					<maml:para>Gets all Event Consumers on SERVER1</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-WmiEventConsumer -Name AS_Test


ComputerName    : WIN-OL5AKAF1OUJ
Name            : AS_Test
ScriptingEngine : VBScript
ScriptFileName  :
ScriptText      : Set objHTTP = CreateObject(&quot;Microsoft.XMLHTTP&quot;)
                  objHTTP.open &quot;POST&quot;, &quot;http://127.0.0.1/&quot;, False

                  objHTTP.setRequestHeader &quot;User-Agent&quot;, &quot;DoYouEven-TF12-Bro?&quot;

                  Dim outputString

                  outputString = outputString &amp; &quot;{&quot;&quot;TargetEvent&quot;&quot;:{&quot;
                  outputString = outputString &amp; &quot;&quot;&quot;EventType&quot;&quot;:&quot;&quot;&quot; &amp; TargetEvent.Path_.Class &amp; &quot;&quot;&quot;,&quot;
                  outputString = outputString &amp; &quot;&quot;&quot;TimeCreated&quot;&quot;:&quot;&quot;&quot; &amp; TargetEvent.Time_Created &amp; &quot;&quot;&quot;,&quot;
                  outputString = outputString &amp; &quot;&quot;&quot;Server&quot;&quot;:&quot;&quot;&quot; &amp; TargetEvent.Path_.Server &amp; &quot;&quot;&quot;,&quot;
                  outputString = outputString &amp; &quot;&quot;&quot;InstanceType&quot;&quot;:&quot;&quot;&quot; &amp; TargetEvent.TargetInstance.Path_.Class &amp; &quot;&quot;&quot;,&quot;
                  outputString = outputString &amp; &quot;&quot;&quot;TargetInstance&quot;&quot;: {&quot;

                  For Each oProp in TargetEvent.TargetInstance.Properties_
                       outputString = outputString &amp; &quot;&quot;&quot;&quot; &amp; oProp.Name &amp; &quot;&quot;&quot;:&quot;&quot;&quot; &amp; oProp &amp; &quot;&quot;&quot;,&quot;
                  Next

                  outputString = Left(outputString, Len(outputString) - 3)
                  outputString = outputString &amp; &quot;}&quot;
                  outputString = outputString &amp; &quot;}}&quot;

                  outputString = Replace(outputString, &quot;\&quot;, &quot;\\&quot;)

                  objHTTP.send outputString

                  Set objHTTP = Nothing</dev:code>
				<dev:remarks>
					<maml:para>Returns the Event Consumer named AS_Test from the localhost</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-WmiEventFilter</command:name>
			<maml:description>
				<maml:para>Get-WmiEventFilter [-ComputerName &lt;string[]&gt;] [&lt;CommonParameters&gt;]

Get-WmiEventFilter -Name &lt;string&gt; [-ComputerName &lt;string[]&gt;] [&lt;CommonParameters&gt;]</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>WmiEventFilter</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para/>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-WmiEventFilter</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Gets the Event Filters running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Get-WmiEventFilter even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>localhost</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-WmiEventFilter</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Gets the Event Filters running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Get-WmiEventFilter even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>localhost</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Name</maml:name>
					<maml:description>
						<maml:para>Unique identifier of an event filter to Get.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>Gets the Event Filters running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Get-WmiEventFilter even if your computer is not configured to run remote commands.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>localhost</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Unique identifier of an event filter to Get.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-WmiEventFilter


ComputerName : WIN-OL5AKAF1OUJ
Name         : ProcessCreation
Query        : SELECT * FROM __InstanceCreationEvent WITHIN 10 WHERE TargetInstance ISA &apos;Win32_Process&apos;

ComputerName : WIN-OL5AKAF1OUJ
Name         : ProcessStartTrace
Query        : SELECT * FROM Win32_ProcessStartTrace

ComputerName : WIN-OL5AKAF1OUJ
Name         : UserProfileCreation
Query        : SELECT * FROM __InstanceCreationEvent WITHIN 10 WHERE TargetInstance ISA &apos;Win32_UserProfile&apos;

ComputerName : WIN-OL5AKAF1OUJ
Name         : Test
Query        : SELECT * FROM __InstanceCreationEvent WITHIN 10 WHERE TargetInstance ISA __EventFilter</dev:code>
				<dev:remarks>
					<maml:para>Lists all Permanent WMI Event Filters</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-WmiEventFilter -ComputerName WORKSTATION1 -Name ProcessCreation


ComputerName : WIN-OL5AKAF1OUJ
Name         : ProcessCreation
Query        : SELECT * FROM __InstanceCreationEvent WITHIN 10 WHERE TargetInstance ISA &apos;Win32_Process&apos;</dev:code>
				<dev:remarks>
					<maml:para>Lists the Permanent WMI Event Filter name ProcessCreation on WORKSTATION1</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-WmiEventSubscription</command:name>
			<maml:description>
				<maml:para>Get-WmiEventSubscription [-ComputerName &lt;string[]&gt;] [&lt;CommonParameters&gt;]

Get-WmiEventSubscription [-ComputerName &lt;string[]&gt;] [-Name &lt;string&gt;] [&lt;CommonParameters&gt;]</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>WmiEventSubscription</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para/>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-WmiEventSubscription</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Gets the Event Subscriptions running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Get-WmiEventSubscription even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-WmiEventSubscription</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Gets the Event Subscriptions running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Get-WmiEventSubscription even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Name</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>Gets the Event Subscriptions running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Get-WmiEventSubscription even if your computer is not configured to run remote commands.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>PS C:\&gt; Get-WmiEventSubscription

ComputerName              FilterName                ConsumerName
------------              ----------                ------------
WIN-OL5AKAF1OUJ           ProcessStartTrace         AS_ExtrinsicHTTPPOST
WIN-OL5AKAF1OUJ           ServiceCreation           AS_IntrinsicHTTPPOST
WIN-OL5AKAF1OUJ           LoggedOnUserCreation      AS_GenericHTTPPOST</dev:code>
				<dev:remarks>
					<maml:para>Get all Event Subscriptions on the localhost.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-WmiEventSubscription -ComputerName SERVER1

ComputerName              FilterName                ConsumerName
------------              ----------                ------------
SERVER1                   ProcessStartTrace         AS_ExtrinsicHTTPPOST
SERVER1                   ServiceCreation           AS_IntrinsicHTTPPOST
SERVER1                   LoggedOnUserCreation      AS_GenericHTTPPOST</dev:code>
				<dev:remarks>
					<maml:para>Gets all Event Subscriptions on SERVER1</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-WmiEventSubscription -Name ProcessStartTrace

ComputerName              FilterName                ConsumerName
------------              ----------                ------------
WIN-OL5AKAF1OUJ           ProcessStartTrace         AS_ExtrinsicHTTPPOST</dev:code>
				<dev:remarks>
					<maml:para>Gets the Event Subscription where the FilterName is ProcessStartTrace.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Remove-WmiEventConsumer</command:name>
			<maml:description>
				<maml:para>Remove-WmiEventConsumer [-ComputerName &lt;string[]&gt;] [&lt;CommonParameters&gt;]

Remove-WmiEventConsumer -Name &lt;string&gt; [-ComputerName &lt;string[]&gt;] [&lt;CommonParameters&gt;]

Remove-WmiEventConsumer -InputObject &lt;Object&gt; [-ComputerName &lt;string[]&gt;] [&lt;CommonParameters&gt;]</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Remove</command:verb>
			<command:noun>WmiEventConsumer</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para/>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Remove-WmiEventConsumer</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Removes the Event Consumers running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Remove-WmiEventConsumer even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Remove-WmiEventConsumer</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Removes the Event Consumers running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Remove-WmiEventConsumer even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Name</maml:name>
					<maml:description>
						<maml:para>Unique identifier for the event consumer to Remove.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Remove-WmiEventConsumer</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Removes the Event Consumers running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Remove-WmiEventConsumer even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
					<maml:name>InputObject</maml:name>
					<maml:description>
						<maml:para>An Uproot.Consumer object to be removed.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>Removes the Event Consumers running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Remove-WmiEventConsumer even if your computer is not configured to run remote commands.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Unique identifier for the event consumer to Remove.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>An Uproot.Consumer object to be removed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Remove-WmiEventConsumer</dev:code>
				<dev:remarks>
					<maml:para>Removes all Event Consumers from the localhost.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Remove-WmiEventConsumer -ComputerName SERVER2 -Name AS_Test</dev:code>
				<dev:remarks>
					<maml:para>Removes the Event Consumer named AS_Test from SERVER2.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-WmiEventConsumer -Name AS_ExtrinsicHTTPPOST | Remove-WmiEventConsumer</dev:code>
				<dev:remarks>
					<maml:para>Removes the Event Consumer named AS_ExtrinsicHTTPPOST from the localhost.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Remove-WmiEventFilter</command:name>
			<maml:description>
				<maml:para>Remove-WmiEventFilter [-ComputerName &lt;string[]&gt;] [&lt;CommonParameters&gt;]

Remove-WmiEventFilter -Name &lt;string&gt; [-ComputerName &lt;string[]&gt;] [&lt;CommonParameters&gt;]

Remove-WmiEventFilter -InputObject &lt;Object&gt; [-ComputerName &lt;string[]&gt;] [&lt;CommonParameters&gt;]</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Remove</command:verb>
			<command:noun>WmiEventFilter</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para/>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Remove-WmiEventFilter</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Removes the Event Filters running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Remove-WmiEventFilter even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>localhost</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Remove-WmiEventFilter</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Removes the Event Filters running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Remove-WmiEventFilter even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>localhost</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Name</maml:name>
					<maml:description>
						<maml:para>Unique identifier of an event filter to Remove.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Remove-WmiEventFilter</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Removes the Event Filters running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Remove-WmiEventFilter even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>localhost</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
					<maml:name>InputObject</maml:name>
					<maml:description>
						<maml:para>An Uproot.Filter object to be removed.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>Removes the Event Filters running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Remove-WmiEventFilter even if your computer is not configured to run remote commands.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>localhost</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Unique identifier of an event filter to Remove.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>An Uproot.Filter object to be removed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Remove-WmiEventFilter</dev:code>
				<dev:remarks>
					<maml:para>Removes all Permanent WMI Event Filters</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Remove-WmiEventFilter -ComputerName SERVER1 -Name UserProfileCreation</dev:code>
				<dev:remarks>
					<maml:para>Removes the Permanent WMI Event Filter named UserProfileCreation from SERVER1</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Get-WmiEventFilter -Name Test


ComputerName : WIN-OL5AKAF1OUJ
Name         : Test
Query        : SELECT * FROM __InstanceCreationEvent WITHIN 10 WHERE TargetInstance ISA __EventFilter


PS C:\&gt; Get-WmiEventFilter -Name Test | Remove-WmiEventFilter
PS C:\&gt; Get-WmiEventFilter -Name Test
PS C:\&gt;</dev:code>
				<dev:remarks>
					<maml:para>Send the Test Permanent WMI Event Filter through the pipeline to Remove-WmiEventfilter</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Remove-WmiEventSubscription</command:name>
			<maml:description>
				<maml:para>Remove-WmiEventSubscription [-ComputerName &lt;string[]&gt;] [&lt;CommonParameters&gt;]

Remove-WmiEventSubscription -Name &lt;string&gt; [-ComputerName &lt;string[]&gt;] [&lt;CommonParameters&gt;]

Remove-WmiEventSubscription -InputObject &lt;Object&gt; [-ComputerName &lt;string[]&gt;] [&lt;CommonParameters&gt;]</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Remove</command:verb>
			<command:noun>WmiEventSubscription</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para/>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Remove-WmiEventSubscription</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Removes the Event Subscriptions running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Remove-WmiEventSubscription even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Remove-WmiEventSubscription</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Removes the Event Subscriptions running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Remove-WmiEventSubscription even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Name</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Remove-WmiEventSubscription</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Removes the Event Subscriptions running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Remove-WmiEventSubscription even if your computer is not configured to run remote commands.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
					<maml:name>InputObject</maml:name>
					<maml:description>
						<maml:para>An Uproot.Subscription object to be removed.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>Removes the Event Subscriptions running on the specified computers. The default is the local computer.

Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more computers. To specify the local computer, type the computer name, a dot (.), or &quot;localhost&quot;.

This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Remove-WmiEventSubscription even if your computer is not configured to run remote commands.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>An Uproot.Subscription object to be removed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Remove-WmiEventSubscription</dev:code>
				<dev:remarks>
					<maml:para>Removes all Event Subscriptions (__FilterToConsumerBinding objects) from the localhost.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Remove-WmiEventSubscription -ComputerName SERVER1 -Name ProcessStartTrace</dev:code>
				<dev:remarks>
					<maml:para>
					</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<!--Generated by: SAPIEN PowerShell HelpWriter 2015 v1.0.11-->
</helpItems>